{"version":3,"sources":["views/Buttons/ButtonDropdowns/ButtonDropdowns.js"],"names":["ButtonDropdowns","props","toggle","bind","state","dropdownOpen","Array","fill","i","newArray","this","map","element","index","setState","className","xs","href","rel","target","isOpen","caret","right","header","disabled","divider","color","id","direction","size","Component"],"mappings":"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","file":"static/js/57.b50cd76a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonDropdown, Card, CardBody, CardHeader, Col, DropdownItem, DropdownMenu, DropdownToggle, Row } from 'reactstrap';\n\nclass ButtonDropdowns extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: new Array(19).fill(false),\n    };\n  }\n\n  toggle(i) {\n    const newArray = this.state.dropdownOpen.map((element, index) => { return (index === i ? !element : false); });\n    this.setState({\n      dropdownOpen: newArray,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Button Dropdown</strong>\n                <div className=\"card-header-actions\">\n                  <a href=\"https://reactstrap.github.io/components/button-dropdown/\" rel=\"noreferrer noopener\" target=\"_blank\" className=\"card-header-action\">\n                    <small className=\"text-muted\">docs</small>\n                  </a>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown isOpen={this.state.dropdownOpen[0]} toggle={() => { this.toggle(0); }}>\n                  <DropdownToggle caret>\n                    Button Dropdown\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Single button dropdowns</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[1]} toggle={() => { this.toggle(1); }}>\n                  <DropdownToggle caret color=\"primary\">\n                    Primary\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[2]} toggle={() => { this.toggle(2); }}>\n                  <DropdownToggle caret color=\"secondary\">\n                    Secondary\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[3]} toggle={() => { this.toggle(3); }}>\n                  <DropdownToggle caret color=\"success\">\n                    Success\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[4]} toggle={() => { this.toggle(4); }}>\n                  <DropdownToggle caret color=\"info\">\n                    Info\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[5]} toggle={() => { this.toggle(5); }}>\n                  <DropdownToggle caret color=\"warning\">\n                    Warning\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[6]} toggle={() => { this.toggle(6); }}>\n                  <DropdownToggle caret color=\"danger\">\n                    Danger\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Split button dropdowns</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[7]} toggle={() => { this.toggle(7); }}>\n                  <Button id=\"caret\" color=\"primary\">Primary</Button>\n                  <DropdownToggle caret color=\"primary\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[8]} toggle={() => { this.toggle(8); }}>\n                  <Button id=\"caret\" color=\"secondary\">Secondary</Button>\n                  <DropdownToggle caret color=\"secondary\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[9]} toggle={() => { this.toggle(9); }}>\n                  <Button id=\"caret\" color=\"success\">Success</Button>\n                  <DropdownToggle caret color=\"success\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[10]} toggle={() => { this.toggle(10); }}>\n                  <Button id=\"caret\" color=\"info\">Info</Button>\n                  <DropdownToggle caret color=\"info\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[11]} toggle={() => { this.toggle(11); }}>\n                  <Button id=\"caret\" color=\"warning\">Warning</Button>\n                  <DropdownToggle caret color=\"warning\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[12]} toggle={() => { this.toggle(12); }}>\n                  <Button id=\"caret\" color=\"danger\">Danger</Button>\n                  <DropdownToggle caret color=\"danger\" />\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Dropdown directions</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown direction=\"up\" className=\"mr-1\" isOpen={this.state.dropdownOpen[13]} toggle={() => { this.toggle(13); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Up\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown direction=\"left\" className=\"mr-1\" isOpen={this.state.dropdownOpen[14]} toggle={() => { this.toggle(14); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Left\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown direction=\"right\" className=\"mr-1\" isOpen={this.state.dropdownOpen[15]} toggle={() => { this.toggle(15); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Direction Right\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[16]} toggle={() => { this.toggle(16); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Default Down\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i><strong>Button Dropdown sizing</strong>\n              </CardHeader>\n              <CardBody>\n                <ButtonDropdown className=\"mr-1\" isOpen={this.state.dropdownOpen[17]} toggle={() => { this.toggle(17); }}>\n                  <DropdownToggle caret size=\"lg\">\n                    Large Button\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n                <ButtonDropdown isOpen={this.state.dropdownOpen[18]} toggle={() => { this.toggle(18); }}>\n                  <DropdownToggle caret size=\"sm\">\n                    Small Button\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    <DropdownItem header>Header</DropdownItem>\n                    <DropdownItem disabled>Action Disabled</DropdownItem>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another Action</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ButtonDropdowns;\n"],"sourceRoot":""}